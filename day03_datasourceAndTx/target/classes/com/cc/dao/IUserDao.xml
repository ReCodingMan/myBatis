<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cc.dao.IUserDao">
<!--    &lt;!&ndash; 配置 查询结果的列名和实体类的属性名的对应关系 &ndash;&gt;-->
<!--    <resultMap id="userMap" type="user">-->
<!--        &lt;!&ndash; 主键字段的对应 &ndash;&gt;-->
<!--        <id property="userId" column="id"></id>-->
<!--        &lt;!&ndash; 非主键字段的对应 &ndash;&gt;-->
<!--        <id property="userName" column="username"></id>-->
<!--        <id property="userAddress" column="address"></id>-->
<!--        <id property="userBirthday" column="birthday"></id>-->
<!--        <id property="userSex" column="sex"></id>-->
<!--    </resultMap>-->

    <!-- 查询所有 -->
    <select id="findAll" resultType="com.cc.domain.User">
        select * from user;
    </select>

    <!-- 保存用户 -->
    <insert id="saveUser" parameterType="user">
        <!-- 配置插入操作后，获取插入数据的 id -->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username, address, sex, birthday) values (#{username}, #{address}, #{sex}, #{birthday});
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="user">
        update user set username=#{username}, address=#{address}, sex=#{sex}, birthday=#{birthday} where id=#{id};
    </update>

    <!-- 根据id删除用户 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{uid}
    </delete>

    <!-- 根据id查询用户-->
    <select id="findById" parameterType="INT" resultType="com.cc.domain.User">
        select * from user where id = #{uid}
    </select>

    <!-- 根据用户名称查询用户 -->
    <select id="findByName" parameterType="java.lang.String" resultType="com.cc.domain.User">
        select * from user where username like '%${value}%'
    </select>

    <!-- 查询总记录数 -->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>

    <!--根据 queryVo 的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.cc.domain.QueryVo" resultType="com.cc.domain.User">
        select * from user where username like #{user.username}
    </select>
</mapper>